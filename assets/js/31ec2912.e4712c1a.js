"use strict";(self.webpackChunkanotega=self.webpackChunkanotega||[]).push([[461],{8606:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>d,contentTitle:()=>t,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var n=r(5893),o=r(1151);const a={sidebar_position:1},t="NestJS",i={id:"NodeJS/nest",title:"NestJS",description:"O NestJS \xe9 um framework para construir aplica\xe7\xf5es Node.js eficientes, confi\xe1veis e escal\xe1veis. Ele \xe9 constru\xeddo com TypeScript e combina elementos de programa\xe7\xe3o orientada a objetos, programa\xe7\xe3o funcional e programa\xe7\xe3o reativa. \xc9 um framework opinado que segue o padr\xe3o de arquitetura MVC (Model-View-Controller) e \xe9 inspirado em frameworks como Angular.",source:"@site/docs/NodeJS/nest.md",sourceDirName:"NodeJS",slug:"/NodeJS/nest",permalink:"/anotega/docs/NodeJS/nest",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/NodeJS/nest.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"anotacoesSidebar",previous:{title:"NodeJS",permalink:"/anotega/docs/NodeJS/basic"},next:{title:"Creational Patterns",permalink:"/anotega/docs/category/creational-patterns"}},d={},c=[{value:"Inicializa\xe7\xe3o",id:"inicializa\xe7\xe3o",level:2},{value:"Estrutura do Projeto",id:"estrutura-do-projeto",level:2},{value:"Conceitos B\xe1sicos",id:"conceitos-b\xe1sicos",level:2},{value:"Main",id:"main",level:3},{value:"Application Context",id:"application-context",level:4},{value:"Swagger",id:"swagger",level:4},{value:"Modules",id:"modules",level:3},{value:"Controllers",id:"controllers",level:3},{value:"Services",id:"services",level:3},{value:"Retorno",id:"retorno",level:4},{value:"Invers\xe3o de Depend\xeancia",id:"invers\xe3o-de-depend\xeancia",level:2},{value:"Inje\xe7\xe3o de Depend\xeancias",id:"inje\xe7\xe3o-de-depend\xeancias",level:2},{value:"DTOs (Data Transfer Objects)",id:"dtos-data-transfer-objects",level:2},{value:"Valida\xe7\xf5es",id:"valida\xe7\xf5es",level:3},{value:"JWT",id:"jwt",level:2},{value:"Guards",id:"guards",level:3},{value:"Decorators",id:"decorators",level:2},{value:"Pipes",id:"pipes",level:2},{value:"Parse",id:"parse",level:3},{value:"Built-in Pipes",id:"built-in-pipes",level:4},{value:"Validation Pipes",id:"validation-pipes",level:3},{value:"Prisma",id:"prisma",level:2},{value:"Queries",id:"queries",level:3},{value:"Joins",id:"joins",level:4},{value:"Create",id:"create",level:4},{value:"Update",id:"update",level:4},{value:"Implements",id:"implements",level:3},{value:"Parse",id:"parse-1",level:2}];function l(e){const s={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.h1,{id:"nestjs",children:"NestJS"}),"\n",(0,n.jsx)(s.p,{children:"O NestJS \xe9 um framework para construir aplica\xe7\xf5es Node.js eficientes, confi\xe1veis e escal\xe1veis. Ele \xe9 constru\xeddo com TypeScript e combina elementos de programa\xe7\xe3o orientada a objetos, programa\xe7\xe3o funcional e programa\xe7\xe3o reativa. \xc9 um framework opinado que segue o padr\xe3o de arquitetura MVC (Model-View-Controller) e \xe9 inspirado em frameworks como Angular."}),"\n",(0,n.jsx)(s.h2,{id:"inicializa\xe7\xe3o",children:"Inicializa\xe7\xe3o"}),"\n",(0,n.jsx)(s.p,{children:"Para iniciar um projeto NestJS, voc\xea pode usar o CLI do NestJS. Primeiro, instale o CLI globalmente:"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"npm install -g @nestjs/cli\n"})}),"\n",(0,n.jsx)(s.p,{children:"Em seguida, crie um novo projeto:"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"nest new my-nest-app\n"})}),"\n",(0,n.jsx)(s.p,{children:"Isso criar\xe1 uma estrutura de diret\xf3rios b\xe1sica para o seu projeto NestJS."}),"\n",(0,n.jsx)(s.h2,{id:"estrutura-do-projeto",children:"Estrutura do Projeto"}),"\n",(0,n.jsx)(s.p,{children:"A estrutura b\xe1sica de um projeto NestJS \xe9 a seguinte:"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{children:"my-nest-app/\n\u251c\u2500\u2500 node_modules/\n\u251c\u2500\u2500 src/\n\u2502   \u251c\u2500\u2500 app.controller.ts\n\u2502   \u251c\u2500\u2500 app.module.ts\n\u2502   \u251c\u2500\u2500 app.service.ts\n\u2502   \u2514\u2500\u2500 main.ts\n\u251c\u2500\u2500 test/\n\u2502   \u2514\u2500\u2500 app.e2e-spec.ts\n\u251c\u2500\u2500 .eslintrc.js\n\u251c\u2500\u2500 .prettierrc\n\u251c\u2500\u2500 package.json\n\u251c\u2500\u2500 package-lock.json\n\u251c\u2500\u2500 tsconfig.json\n\u251c\u2500\u2500 tsconfig.build.json\n\u2514\u2500\u2500 nest-cli.json\n"})}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"node_modules/"})," cont\xe9m as depend\xeancias do projeto."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"src/"})," cont\xe9m o c\xf3digo-fonte da aplica\xe7\xe3o.","\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"app.controller.ts"})," define os controladores da aplica\xe7\xe3o."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"app.module.ts"})," \xe9 o m\xf3dulo raiz da aplica\xe7\xe3o."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"app.service.ts"})," cont\xe9m a l\xf3gica de neg\xf3cios."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"main.ts"})," \xe9 o ponto de entrada da aplica\xe7\xe3o."]}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"test/"})," cont\xe9m os testes da aplica\xe7\xe3o.","\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"app.e2e-spec.ts"})," \xe9 um exemplo de teste de ponta a ponta."]}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:".eslintrc.js"})," \xe9 o arquivo de configura\xe7\xe3o do ESLint(F)."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:".prettierrc"})," \xe9 o arquivo de configura\xe7\xe3o do Prettier."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"package.json"})," cont\xe9m as depend\xeancias e scripts do projeto."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"package-lock.json"})," \xe9 o arquivo de bloqueio de depend\xeancias do NPM."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"tsconfig.json"})," \xe9 o arquivo de configura\xe7\xe3o do TypeScript."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"tsconfig.build.json"})," \xe9 o arquivo de configura\xe7\xe3o do TypeScript para constru\xe7\xe3o."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"nest-cli.json"})," \xe9 o arquivo de configura\xe7\xe3o do CLI do NestJS."]}),"\n"]}),"\n",(0,n.jsx)(s.h2,{id:"conceitos-b\xe1sicos",children:"Conceitos B\xe1sicos"}),"\n",(0,n.jsx)(s.h3,{id:"main",children:"Main"}),"\n",(0,n.jsxs)(s.p,{children:["O ponto de entrada da aplica\xe7\xe3o \xe9 o arquivo ",(0,n.jsx)(s.code,{children:"main.ts"}),", onde o aplicativo NestJS \xe9 criado e iniciado. Aqui, voc\xea pode configurar o servidor, middleware e outras funcionalidades."]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-typescript",metastring:'title="main.ts"',children:"import { NestFactory } from '@nestjs/core';\nimport { AppModule } from './app.module';\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n  await app.listen(3000);\n}\nbootstrap();\n"})}),"\n",(0,n.jsx)(s.h4,{id:"application-context",children:"Application Context"}),"\n",(0,n.jsxs)(s.p,{children:["O contexto da aplica\xe7\xe3o \xe9 o ambiente onde o NestJS executa. Ele \xe9 criado quando voc\xea chama ",(0,n.jsx)(s.code,{children:"NestFactory.createApplicationContext(AppModule)"}),". O contexto cont\xe9m informa\xe7\xf5es sobre os m\xf3dulos, controladores e provedores registrados na aplica\xe7\xe3o."]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-typescript",metastring:'title="main.ts"',children:"import { NestFactory } from '@nestjs/core';\nimport { AppModule } from './app.module';\nasync function bootstrap() {\n  const app = await NestFactory.createApplicationContext(AppModule);\n  await app.listen(3000);\n}\nbootstrap();\n"})}),"\n",(0,n.jsx)(s.admonition,{title:"Contexto da Aplica\xe7\xe3o",type:"tip",children:(0,n.jsx)(s.p,{children:"O contexto da aplica\xe7\xe3o \xe9 \xfatil para acessar servi\xe7os e m\xf3dulos fora do ciclo de vida de uma requisi\xe7\xe3o HTTP, como em tarefas agendadas ou scripts de inicializa\xe7\xe3o."})}),"\n",(0,n.jsx)(s.h4,{id:"swagger",children:"Swagger"}),"\n",(0,n.jsx)(s.p,{children:"Para documentar sua API, voc\xea pode usar o Swagger. O NestJS possui integra\xe7\xe3o nativa com o Swagger, permitindo que voc\xea gere documenta\xe7\xe3o interativa para sua API."}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-typescript",metastring:'title="main.ts"',children:"import { NestFactory } from '@nestjs/core';\nimport { AppModule } from './app.module';\nimport { SwaggerModule, DocumentBuilder } from '@nestjs/swagger';\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n\n  const config = new DocumentBuilder()\n    .setTitle('API Example')\n    .setDescription('API description')\n    .setVersion('1.0')\n    .build();\n  const document = SwaggerModule.createDocument(app, config);\n  SwaggerModule.setup('docs', app, document);\n\n  await app.listen(3000);\n}\nbootstrap();\n"})}),"\n",(0,n.jsx)(s.admonition,{title:"Swagger",type:"tip",children:(0,n.jsxs)(s.p,{children:["A documenta\xe7\xe3o Swagger estar\xe1 dispon\xedvel em ",(0,n.jsx)(s.code,{children:"http://localhost:3000/docs"})," ap\xf3s iniciar a aplica\xe7\xe3o."]})}),"\n",(0,n.jsx)(s.h3,{id:"modules",children:"Modules"}),"\n",(0,n.jsxs)(s.p,{children:["Os m\xf3dulos s\xe3o a base da estrutura do NestJS. Cada m\xf3dulo \xe9 uma classe anotada com o decorador ",(0,n.jsx)(s.code,{children:"@Module()"}),", que define os componentes que pertencem a esse m\xf3dulo, como controladores e provedores."]}),"\n",(0,n.jsxs)(s.p,{children:["Serve para conectar diferentes partes da aplica\xe7\xe3o, como controladores, servi\xe7os e outros m\xf3dulos. Cada m\xf3dulo \xe9 uma classe anotada com o decorador ",(0,n.jsx)(s.code,{children:"@Module()"}),"."]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-typescript",metastring:'title="app.module.ts"',children:"import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\n\n@Module({\n  imports: [],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n"})}),"\n",(0,n.jsx)(s.h3,{id:"controllers",children:"Controllers"}),"\n",(0,n.jsxs)(s.p,{children:["Os controladores s\xe3o respons\xe1veis por lidar com as requisi\xe7\xf5es HTTP. Eles s\xe3o anotados com o decorador ",(0,n.jsx)(s.code,{children:"@Controller()"})," e definem rotas para os endpoints da aplica\xe7\xe3o."]}),"\n",(0,n.jsxs)(s.p,{children:["Possui m\xe9todos que respondem a requisi\xe7\xf5es HTTP e s\xe3o anotados com decoradores como ",(0,n.jsx)(s.code,{children:"@Get()"}),", ",(0,n.jsx)(s.code,{children:"@Post()"}),", ",(0,n.jsx)(s.code,{children:"@Put()"}),", etc. Esses m\xe9todos recebem os dados da requisi\xe7\xe3o e retornam uma resposta."]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-typescript",metastring:'title="app.controller.ts"',children:"import { Controller, Get } from '@nestjs/common';\n\n@Controller('/')\nexport class AppController {\n    constructor(private readonly appService: AppService) {}\n\n    @Get()\n    getHello(): string {\n        return this.appService.getHello();\n    }\n}\n"})}),"\n",(0,n.jsxs)(s.admonition,{title:"Rotas",type:"tip",children:[(0,n.jsx)(s.p,{children:"As rotas s\xe3o definidas nos controladores e podem ser personalizadas com par\xe2metros, consultas e outras op\xe7\xf5es."}),(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-typescript",metastring:'title="app.controller.ts"',children:"@Controller('users')\nexport class UsersController {\n    @Get(':id')\n    getUser(@Param('id') id: string): string {\n        return `User ID: ${id}`;\n    }\n\n    @Post('create')\n    createUser(@Body() createUserDto: CreateUserDto): string {\n        return `User created with name: ${createUserDto.name}`;\n    }\n}\n\n\n"})})]}),"\n",(0,n.jsx)(s.h3,{id:"services",children:"Services"}),"\n",(0,n.jsxs)(s.p,{children:["Os servi\xe7os cont\xeam a l\xf3gica de neg\xf3cios da aplica\xe7\xe3o. Eles s\xe3o anotados com o decorador ",(0,n.jsx)(s.code,{children:"@Injectable()"})," e podem ser injetados em controladores ou outros servi\xe7os."]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-typescript",metastring:'title="app.service.ts"',children:"\nimport { Injectable } from '@nestjs/common';\n@Injectable()\nexport class AppService {\n    getHello(): string {\n        return 'Hello World!';\n    }\n    }\n"})}),"\n",(0,n.jsx)(s.h4,{id:"retorno",children:"Retorno"}),"\n",(0,n.jsx)(s.h2,{id:"invers\xe3o-de-depend\xeancia",children:"Invers\xe3o de Depend\xeancia"}),"\n",(0,n.jsx)(s.p,{children:"O NestJS segue o princ\xedpio da Invers\xe3o de Depend\xeancia (DIP - Dependency Inversion Principle), que \xe9 um dos princ\xedpios SOLID. Este princ\xedpio estabelece que:"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"M\xf3dulos de alto n\xedvel n\xe3o devem depender de m\xf3dulos de baixo n\xedvel. Ambos devem depender de abstra\xe7\xf5es."}),"\n",(0,n.jsx)(s.li,{children:"Abstra\xe7\xf5es n\xe3o devem depender de detalhes. Detalhes devem depender de abstra\xe7\xf5es."}),"\n"]}),"\n",(0,n.jsx)(s.p,{children:"No NestJS, isso significa que os controladores dependem de abstra\xe7\xf5es (interfaces) dos servi\xe7os, n\xe3o de suas implementa\xe7\xf5es concretas. Isso torna o c\xf3digo mais flex\xedvel, test\xe1vel e facilita a manuten\xe7\xe3o."}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-typescript",metastring:'title="user.service.interface.ts"',children:"export interface IUserService {\n    getUser(id: string): Promise<User>;\n    createUser(userData: CreateUserDto): Promise<User>;\n}\n"})}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-typescript",metastring:'title="app.controller.ts"',children:"import { Controller, Get } from '@nestjs/common';\nimport { IUserService } from './interfaces/user.service.interface';\n\n@Controller('/')\nexport class AppController {\n    constructor(private readonly userService: IUserService) {}\n    \n    @Get()\n    getUsers(): Promise<User[]> {\n        return this.userService.getAllUsers();\n    }\n}\n"})}),"\n",(0,n.jsxs)(s.p,{children:["Nesse exemplo, o ",(0,n.jsx)(s.code,{children:"AppService"})," \xe9 injetado no ",(0,n.jsx)(s.code,{children:"AppController"}),", permitindo que o controlador utilize os m\xe9todos do servi\xe7o."]}),"\n",(0,n.jsx)(s.h2,{id:"inje\xe7\xe3o-de-depend\xeancias",children:"Inje\xe7\xe3o de Depend\xeancias"}),"\n",(0,n.jsx)(s.p,{children:"A Inje\xe7\xe3o de Depend\xeancias (DI - Dependency Injection) \xe9 a t\xe9cnica utilizada pelo NestJS para implementar o princ\xedpio da Invers\xe3o de Depend\xeancia. \xc9 o mecanismo que permite fornecer as depend\xeancias necess\xe1rias para uma classe sem que ela precise cri\xe1-las diretamente."}),"\n",(0,n.jsx)(s.p,{children:"O NestJS possui um container de IoC (Inversion of Control) que gerencia automaticamente a cria\xe7\xe3o e inje\xe7\xe3o das inst\xe2ncias dos servi\xe7os. Isso promove:"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Baixo acoplamento"}),": Classes n\xe3o dependem de implementa\xe7\xf5es concretas"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Facilidade de testes"}),': Depend\xeancias podem ser facilmente "mockadas"']}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.strong,{children:"Reutiliza\xe7\xe3o de c\xf3digo"}),": Servi\xe7os podem ser compartilhados entre diferentes m\xf3dulos"]}),"\n"]}),"\n",(0,n.jsx)(s.p,{children:"Voc\xea pode injetar servi\xe7os usando o construtor do controlador ou servi\xe7o. O NestJS resolve automaticamente as depend\xeancias necess\xe1rias."}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-typescript",metastring:'title="app.module.ts"',children:"import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { UsersModule } from './users/users.module'; \n\n@Module({\n  imports: [UsersModule],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n"})}),"\n",(0,n.jsx)(s.h2,{id:"dtos-data-transfer-objects",children:"DTOs (Data Transfer Objects)"}),"\n",(0,n.jsx)(s.p,{children:"Os DTOs s\xe3o usados para definir a estrutura dos dados que ser\xe3o enviados e recebidos nas requisi\xe7\xf5es. Eles ajudam a validar e transformar os dados antes de serem processados pelos controladores ou servi\xe7os."}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-typescript",metastring:'title="create-user.dto.ts"',children:"export interface CreateUserDto {\n    name: string;\n    age: number;\n}\n"})}),"\n",(0,n.jsx)(s.h3,{id:"valida\xe7\xf5es",children:"Valida\xe7\xf5es"}),"\n",(0,n.jsxs)(s.p,{children:["As valida\xe7\xf5es podem ser aplicadas aos DTOs usando o pacote ",(0,n.jsx)(s.code,{children:"class-validator"}),". Isso permite que voc\xea defina regras de valida\xe7\xe3o para os campos dos DTOs, garantindo que os dados recebidos estejam corretos."]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-typescript",metastring:'title="create-user.dto.ts"',children:"import { IsString, IsInt } from 'class-validator';\nexport class CreateUserDto {\n    @IsString()\n    name: string;\n    @IsInt()\n    age: number;\n}\n"})}),"\n",(0,n.jsxs)(s.admonition,{type:"warning",children:[(0,n.jsx)(s.mdxAdmonitionTitle,{}),(0,n.jsx)(s.p,{children:"Decorators de valida\xe7\xe3o do class-validator s\xf3 funcionam em classes, n\xe3o em interfaces. Portanto, \xe9 recomendado usar classes para DTOs quando voc\xea precisar de valida\xe7\xf5es."})]}),"\n",(0,n.jsx)(s.h2,{id:"jwt",children:"JWT"}),"\n",(0,n.jsxs)(s.p,{children:["O JWT (JSON Web Token) \xe9 um padr\xe3o aberto (RFC 7519) que define um formato compacto e autocontido para transmitir informa\xe7\xf5es entre partes como um objeto JSON. No NestJS, voc\xea pode usar o pacote ",(0,n.jsx)(s.code,{children:"@nestjs/jwt"})," para implementar autentica\xe7\xe3o baseada em JWT."]}),"\n",(0,n.jsxs)(s.p,{children:["Ele \xe9 amplamente utilizado para autentica\xe7\xe3o e autoriza\xe7\xe3o em aplica\xe7\xf5es web. O JWT \xe9 composto por tr\xeas partes: header, payload e signature. Ele permite que voc\xea autentique usu\xe1rios de forma segura e escal\xe1vel.\n-- ",(0,n.jsx)(s.strong,{children:"Header"}),": Cont\xe9m informa\xe7\xf5es sobre o tipo de token e o algoritmo de assinatura.\n-- ",(0,n.jsx)(s.strong,{children:"Payload"}),": Cont\xe9m as informa\xe7\xf5es do usu\xe1rio e outras reivindica\xe7\xf5es (claims).\n-- ",(0,n.jsx)(s.strong,{children:"Signature"}),": \xc9 usada para verificar a integridade do token e garantir que ele n\xe3o foi alterado."]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-typescript",metastring:'title="jwt.strategy.ts"',children:"import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { JwtPayload } from './jwt-payload.interface';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n    constructor() {\n        super({\n            jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n            ignoreExpiration: false,\n            secretOrKey: 'your_jwt_secret',\n        });\n    }\n\n    async validate(payload: JwtPayload) {\n        return { userId: payload.sub, username: payload.username };\n    }\n}\n"})}),"\n",(0,n.jsx)(s.h3,{id:"guards",children:"Guards"}),"\n",(0,n.jsxs)(s.p,{children:["Os Guards s\xe3o usados para proteger rotas e controlar o acesso a elas. Eles s\xe3o classes que implementam a interface ",(0,n.jsx)(s.code,{children:"CanActivate"})," e podem ser usados para verificar se uma requisi\xe7\xe3o deve ser processada ou n\xe3o."]}),"\n",(0,n.jsx)(s.p,{children:"Eles s\xe3o executados antes que a requisi\xe7\xe3o seja manipulada pelo controlador e podem ser usados para autentica\xe7\xe3o, autoriza\xe7\xe3o ou outras verifica\xe7\xf5es de seguran\xe7a."}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-typescript",metastring:'title="auth.guard.ts"',children:"import { Injectable } from '@nestjs/common';\nimport { CanActivate, ExecutionContext } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n    constructor(private readonly jwtService: JwtService) {}\n\n    canActivate(context: ExecutionContext): boolean {\n        const request = context.switchToHttp().getRequest();\n        const token = request.headers.authorization?.split(' ')[1];\n        if (!token) return false;\n\n        try {\n            const payload = this.jwtService.verify(token);\n            request.user = payload;\n            return true;\n        } catch (error) {\n            return false;\n        }\n    }\n}\n\n"})}),"\n",(0,n.jsx)(s.h2,{id:"decorators",children:"Decorators"}),"\n",(0,n.jsx)(s.p,{children:"Os Decorators s\xe3o uma parte fundamental do NestJS e do TypeScript. Eles s\xe3o usados para adicionar metadados \xe0s classes, m\xe9todos, propriedades e par\xe2metros. No NestJS, os decoradores s\xe3o amplamente utilizados para definir controladores, rotas, inje\xe7\xe3o de depend\xeancias e muito mais."}),"\n",(0,n.jsx)(s.p,{children:"Eles s\xe3o fun\xe7\xf5es que podem ser aplicadas a classes, m\xe9todos, propriedades ou par\xe2metros para modificar seu comportamento ou adicionar metadados. No NestJS, os decoradores s\xe3o usados para definir controladores, rotas, inje\xe7\xe3o de depend\xeancias e muito mais."}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-typescript",metastring:'title="example.decorator.ts"',children:"import { SetMetadata } from '@nestjs/common';\nexport const Roles = (...roles: string[]) => SetMetadata('roles', roles);\n"})}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-typescript",metastring:'title="example.controller.ts"',children:"import { Controller, Get, UseGuards } from '@nestjs/common';\nimport { Roles } from './example.decorator';\nimport { RolesGuard } from './roles.guard';\n@Controller('example')\nexport class ExampleController {\n    @Get()\n    @Roles('admin')\n    @UseGuards(RolesGuard)\n    getExample() {\n        return 'This is an example route';\n    }\n}\n\n"})}),"\n",(0,n.jsx)(s.h2,{id:"pipes",children:"Pipes"}),"\n",(0,n.jsx)(s.p,{children:"Os Pipes s\xe3o usados para transformar e validar os dados das requisi\xe7\xf5es antes que eles sejam processados pelos controladores. Eles podem ser usados para aplicar valida\xe7\xf5es, transforma\xe7\xf5es ou manipula\xe7\xf5es nos dados recebidos."}),"\n",(0,n.jsxs)(s.p,{children:["Eles s\xe3o classes que implementam a interface ",(0,n.jsx)(s.code,{children:"PipeTransform"})," e podem ser usados para transformar ou validar os dados das requisi\xe7\xf5es antes que eles sejam processados pelos controladores."]}),"\n",(0,n.jsx)(s.p,{children:"S\xe3o executados ap\xf3s o middleware e antes do controlador."}),"\n",(0,n.jsx)(s.h3,{id:"parse",children:"Parse"}),"\n",(0,n.jsx)(s.p,{children:"Os Pipes de Parse s\xe3o usados para transformar os dados das requisi\xe7\xf5es em tipos espec\xedficos. Eles podem ser usados para converter strings em n\xfameros, booleans ou outros tipos de dados."}),"\n",(0,n.jsx)(s.h4,{id:"built-in-pipes",children:"Built-in Pipes"}),"\n",(0,n.jsx)(s.p,{children:"O NestJS fornece v\xe1rios Pipes embutidos que podem ser usados para valida\xe7\xe3o e transforma\xe7\xe3o de dados. Alguns dos Pipes embutidos mais comuns incluem:"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-typescript",metastring:'title="example.controller.ts"         ',children:"    import { Controller, Get, Param, UsePipes } from '@nestjs/common';\n    import { ParseIntPipe } from './parse-int.pipe';\n    @Controller('example')\n    export class ExampleController {\n        @Get(':id')\n        getExample(@Param('id',ParseIntPipe) id: number) {\n            return `Example with ID: ${id}`;\n        }\n    }\n"})}),"\n",(0,n.jsx)(s.h3,{id:"validation-pipes",children:"Validation Pipes"}),"\n",(0,n.jsx)(s.p,{children:"Os Validation Pipes s\xe3o usados para validar os dados das requisi\xe7\xf5es antes que eles sejam processados pelos controladores. Eles podem ser usados para aplicar regras de valida\xe7\xe3o, como verificar se um campo \xe9 obrigat\xf3rio, se um valor est\xe1 dentro de um intervalo ou se um campo \xe9 do tipo correto."}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-typescript",metastring:'title="example.controller.ts"',children:"import { Controller, Post, Body, UsePipes } from '@nestjs/common';\nimport { ValidationPipe } from './validation.pipe';\n@Controller('example')\nexport class ExampleController {\n    @Post()\n    createExample(@Body(new ValidationPipe()) createExampleDto: CreateExampleDto) {\n        return `Example created with data: ${JSON.stringify(createExampleDto)}`;\n    }\n}\n"})}),"\n",(0,n.jsx)(s.h2,{id:"prisma",children:"Prisma"}),"\n",(0,n.jsx)(s.p,{children:"O Prisma \xe9 um ORM (Object-Relational Mapping) moderno e poderoso para Node.js e TypeScript. Ele facilita a intera\xe7\xe3o com bancos de dados relacionais, permitindo que voc\xea escreva consultas de forma intuitiva e segura."}),"\n",(0,n.jsxs)(s.p,{children:["Para usar o Prisma no NestJS, voc\xea precisa instalar o pacote ",(0,n.jsx)(s.code,{children:"@nestjs/prisma"})," e configurar o Prisma Client."]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"npm install @nestjs/prisma prisma\n"})}),"\n",(0,n.jsx)(s.p,{children:"Em seguida, voc\xea pode criar um m\xf3dulo Prisma e configurar o Prisma Client."}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-typescript",metastring:'title="prisma.module.ts"',children:"import { Module } from '@nestjs/common';    \nimport { PrismaService } from './prisma.service';\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService],\n})\nexport class PrismaModule {}\n"})}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-typescript",metastring:'title="prisma.service.ts"',children:"import { Injectable } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n@Injectable()\nexport class PrismaService extends PrismaClient {\n    constructor() {\n        super();\n    }\n}\n}\n"})}),"\n",(0,n.jsxs)(s.p,{children:["Com isso \xe9 poss\xedvel injetar o ",(0,n.jsx)(s.code,{children:"PrismaService"})," em outros servi\xe7os ou controladores e usar o Prisma Client para interagir com o banco de dados."]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-typescript",metastring:'title="user.service.ts"',children:"import { Injectable } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\n@Injectable()\nexport class UserService {\n    constructor(private readonly prisma: PrismaService) {}\n    async getUser(id: number) {\n        return this.prisma.user.findUnique({ where: { id } });\n    }\n    async createUser(data: CreateUserDto) {\n\n        return this.prisma.user.create({ data });\n    }\n}\n"})}),"\n",(0,n.jsx)(s.h3,{id:"queries",children:"Queries"}),"\n",(0,n.jsxs)(s.p,{children:["As consultas no Prisma s\xe3o feitas usando o Prisma Client, que fornece m\xe9todos para interagir com o banco de dados. Voc\xea pode usar m\xe9todos como ",(0,n.jsx)(s.code,{children:"findUnique"}),", ",(0,n.jsx)(s.code,{children:"findMany"}),", ",(0,n.jsx)(s.code,{children:"create"}),", ",(0,n.jsx)(s.code,{children:"update"})," e ",(0,n.jsx)(s.code,{children:"delete"})," para realizar opera\xe7\xf5es CRUD."]}),"\n",(0,n.jsx)(s.h4,{id:"joins",children:"Joins"}),"\n",(0,n.jsxs)(s.p,{children:["Para realizar joins com o Prisma, voc\xea pode usar a op\xe7\xe3o ",(0,n.jsx)(s.code,{children:"include"})," nas consultas. Isso permite que voc\xea busque dados relacionados de outras tabelas."]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-typescript",metastring:'title="user.service.ts"',children:"async getUserWithPosts(id: number) {\n    return this.prisma.user.findUnique({\n        where: { id },\n        include: { posts: true }\n    });\n}\n"})}),"\n",(0,n.jsxs)(s.p,{children:["O uso do ",(0,n.jsx)(s.code,{children:"omit"})," permite que voc\xea exclua campos espec\xedficos do resultado da consulta. Isso \xe9 \xfatil quando voc\xea n\xe3o precisa de todos os campos de um registro."]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-typescript",metastring:'title="user.service.ts"',children:"async getUserWithPosts(id: number) {\n    return this.prisma.user.findUnique({\n        where: { id },\n        include: {\n            posts: {\n                omit: {\n                    createdAt: true,\n            },\n        },\n    });\n}\n"})}),"\n",(0,n.jsxs)(s.p,{children:["O uso do ",(0,n.jsx)(s.code,{children:"select"})," permite que voc\xea selecione apenas os campos espec\xedficos que deseja retornar na consulta. Isso \xe9 \xfatil para otimizar o desempenho e reduzir a quantidade de dados retornados."]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-typescript",metastring:'title="user.service.ts"',children:"async getUserWithSelectedFields(id: number) {\n    return this.prisma.user.findUnique({\n        where: { id },\n        select: {\n            name: true,\n            email: true,\n            posts: {\n                select: {\n                    title: true,\n                    content: true,\n                },\n            },\n        },\n    });\n}\n"})}),"\n",(0,n.jsx)(s.h4,{id:"create",children:"Create"}),"\n",(0,n.jsxs)(s.p,{children:["Para criar registros no Prisma, voc\xea pode usar o m\xe9todo ",(0,n.jsx)(s.code,{children:"create"}),". Ele permite que voc\xea especifique os dados do novo registro."]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-typescript",metastring:'title="user.service.ts"',children:"async createUser(data: CreateUserDto) {\n    return this.prisma.user.create({\n        data: {\n            name: data.name,\n            email: data.email,\n        },\n    });\n}\n"})}),"\n",(0,n.jsx)(s.p,{children:"\xc9 poss\xedvel fazer create aninhado, ou seja, criar registros relacionados em uma \xfanica consulta."}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-typescript",metastring:'title="user.service.ts"',children:"async createUserWithPosts(data: CreateUserDto) {\n    return this.prisma.user.create({\n        data: {\n            name: data.name,\n            posts: {\n                create: data.posts.map(post => ({\n                    title: post.title,   \n                    content: post.content,\n                })),\n            },\n        },\n    });\n}\n"})}),"\n",(0,n.jsx)(s.h4,{id:"update",children:"Update"}),"\n",(0,n.jsxs)(s.p,{children:["Para atualizar registros no Prisma, voc\xea pode usar o m\xe9todo ",(0,n.jsx)(s.code,{children:"update"}),". Ele permite que voc\xea especifique o registro a ser atualizado e os novos dados."]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-typescript",metastring:'title="user.service.ts"',children:"async updateUser(id: number, data: UpdateUserDto) {\n    return this.prisma.user.update({\n        where: { id },\n        data,\n    });\n}\n"})}),"\n",(0,n.jsx)(s.p,{children:"\xc9 poss\xedvel fazer update aninhado, ou seja, atualizar registros relacionados em uma \xfanica consulta."}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-typescript",metastring:'title="user.service.ts"',children:"async updateUserWithPosts(id: number, data: UpdateUserDto) {\n    return this.prisma.user.update({\n        where: { id },\n        data: {\n            name: data.name,\n            posts: {\n                update: data.posts.map(post => ({\n                    where: { id: post.id },\n                    data: { title: post.title, content: post.content },\n                })),\n            },\n        },\n    });\n}\n"})}),"\n",(0,n.jsx)(s.h3,{id:"implements",children:"Implements"}),"\n",(0,n.jsxs)(s.p,{children:["Os ",(0,n.jsx)(s.code,{children:"implements"})," s\xe3o usados para garantir que uma classe siga uma interface espec\xedfica. No NestJS, voc\xea pode usar ",(0,n.jsx)(s.code,{children:"implements"})," para definir contratos para servi\xe7os, controladores ou outros componentes."]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-typescript",metastring:'title="user.service.ts"',children:"import { Injectable } from '@nestjs/common';\nimport { IUserService } from './interfaces/user.service.interface';\n\n@Injectable()\nexport class UserService implements IUserService {\n    // Implementa\xe7\xe3o dos m\xe9todos da interface IUserService\n}\n"})}),"\n",(0,n.jsx)(s.h2,{id:"parse-1",children:"Parse"})]})}function p(e={}){const{wrapper:s}={...(0,o.a)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},1151:(e,s,r)=>{r.d(s,{Z:()=>i,a:()=>t});var n=r(7294);const o={},a=n.createContext(o);function t(e){const s=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:t(e.components),n.createElement(a.Provider,{value:s},e.children)}}}]);